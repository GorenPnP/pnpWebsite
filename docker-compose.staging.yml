version: '3.7'

services:
        # web-staging:
        #         container_name: pnp-web-staging
        #         build:
        #                 context: ./ppServer
        #                 dockerfile: Dockerfile.prod
        #         command: gunicorn ppServer.wsgi:application --bind 0.0.0.0:8001 --workers=3
        #         volumes:
        #                 - static_volume:/home/ppServer/web/static
        #                 - media_volume:/home/ppServer/web/media
        #         expose:
        #                 - 8001
        #         env_file:
        #                 - ./.env.staging
        #         depends_on:
        #                 - db-staging

        # db-staging:
        #         container_name: pnp-db-staging
        #         image: postgres:12.0-alpine
        #         volumes:
        #                 - postgres_data:/var/lib/postgresql/data/
        #         expose:
        #                 - 5431
        #         env_file:
        #                 - ./.env.staging.db

        nginx-proxy-staging:
                container_name: pnp-nginx-staging
                build: nginx
                restart: always
                ports:
                        - 444:443       # https
                        - 81:80         # http
                volumes:
                        - static_volume:/home/ppServer/web/static
                        - media_volume:/home/ppServer/web/media
                        - certs:/etc/nginx/certs
                        - html:/usr/share/nginx/html
                        - vhost:/etc/nginx/vhost.d
                        - /var/run/docker.sock:/tmp/docker.sock:ro
                depends_on:
                        - web

        nginx-proxy-letsencrypt-staging:
                container_name: pnp-nginx-letsencrypt-staging
                image: jrcs/letsencrypt-nginx-proxy-companion
                env_file:
                        - .env.staging.proxy-companion
                volumes:
                        - /var/run/docker.sock:/var/run/docker.sock:ro
                        - certs:/etc/nginx/certs
                        - html:/usr/share/nginx/html
                        - vhost:/etc/nginx/vhost.d
                depends_on:
                        - nginx-proxy-staging

volumes:
        postgres_data:
        static_volume:
        media_volume:
        certs:
        html:
        vhost:
