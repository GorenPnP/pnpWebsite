version: '3.7'

services:
        web:
                container_name: pnp-web
                restart: unless-stopped
                build:
                        context: ./ppServer
                        dockerfile: Dockerfile.prod
                command: daphne -b 0.0.0.0 -p 8000 ppServer.asgi:application # gunicorn ppServer.wsgi:application --bind 0.0.0.0:8000 --workers=3
                volumes:
                        - static_volume:/home/ppServer/web/static
                        - media_volume:/home/ppServer/web/media
                        # - /home/debian/pnpWebsite/backups:/home/ppServer/web/backups
                expose:
                        - 8000
                env_file:
                        - ./.env.prod
                depends_on:
                        - db

        db:
                container_name: pnp-db
                image: postgres:12.0-alpine
                restart: unless-stopped
                volumes:
                        - postgres_data:/var/lib/postgresql/data/
                expose:
                        - 5432
                env_file:
                        - ./.env.prod.db

        nginx:
                container_name: pnp-webserver
                image: nginx:latest
                restart: unless-stopped
                ports:
                        - 80:80
                        - 443:443
                volumes:
                        - /home/debian/pnpWebsite/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
                        - /home/debian/pnpWebsite/nginx/conf.d:/etc/nginx/conf.d:ro
                        - /home/debian/pnpWebsite/nginx/cloudflare-real_ip.conf:/etc/nginx/cloudflare-real_ip.conf:ro
                        - /home/debian/pnpWebsite/nginx/certs:/etc/ssl/certs:ro
                        - /home/debian/pnpWebsite/nginx/logs:/var/log/nginx/
                        - static_volume:/home/ppServer/web/static:ro
                        - media_volume:/home/ppServer/web/media:ro
                depends_on:
                        - web


        cadvisor:
                container_name: pnp-cadvisor
                image: google/cadvisor:latest
                volumes:
                        - /:/rootfs:ro
                        - /var/run:/var/run:ro
                        - /sys:/sys:ro
                        - /var/lib/docker:/var/lib/docker:ro
                        - /dev/disk:/dev/disk:ro
                devices:
                        - /dev/kmsg
                ports:
                        - 8080:8080

        prometheus:
                container_name: pnp-prometheus
                image: prom/prometheus:latest
                volumes:
                        - ./prometheus/:/etc/prometheus/
                ports:
                        - 9090:9090

        grafana:
                container_name: pnp-grafana
                image: grafana/grafana:latest
                ports:
                        - 3000:3000
                volumes:
                        - grafana-data:/var/lib/grafana

volumes:
        postgres_data:
        static_volume:
        media_volume:
        grafana-data:
