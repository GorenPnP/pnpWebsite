###########
# BUILDER #
###########

# pull official base image
FROM nikolaik/python-nodejs:python3.9-nodejs14-alpine as builder

# set work directory
WORKDIR /usr/src/ppServer

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# dependencies ...
RUN apk update && \
    # for psycopg2
    apk add --virtual build-deps gcc musl-dev  && \
    # for psycopg2
    apk add postgresql-dev python3-dev && \
    apk add netcat-openbsd && \
    # for pillow
    apk add zlib-dev jpeg-dev

# lint
RUN pip install --upgrade pip
#RUN pip install flake8
COPY . .
#RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/ppServer/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM nikolaik/python-nodejs:python3.9-nodejs14-alpine

# create directory for the app user
RUN mkdir -p /home/ppServer

# create the app user
RUN addgroup -S ppServer && adduser -S ppServer -G ppServer

# create the appropriate directories
ENV APP_HOME=/home/ppServer/web

RUN mkdir $APP_HOME
RUN [[ -d $APP_HOME/static ]] || mkdir $APP_HOME/static
RUN [[ -d $APP_HOME/media ]] || mkdir $APP_HOME/media

WORKDIR $APP_HOME

# install dependencies
RUN apk update && apk add libpq && \
    # for pillow
    apk add zlib-dev jpeg-dev

COPY --from=builder /usr/src/ppServer/wheels /wheels
COPY --from=builder /usr/src/ppServer/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy package*.json, install dependencies over npm
COPY ./package*.json $APP_HOME/
RUN npm update npm && npm ci --only=production

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R ppServer:ppServer $APP_HOME

# change to the app user
USER ppServer

# run entrypoint.prod.sh
ENTRYPOINT ["/home/ppServer/web/entrypoint.prod.sh"]
