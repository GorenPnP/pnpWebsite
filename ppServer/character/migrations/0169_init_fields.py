# Generated by Django 4.2.8 on 2024-10-30 16:28

from django.db import migrations
from django.db.models import F, OuterRef, Sum, Subquery
from django.db.models.functions import Coalesce

def init_klasse_requirement(apps, schema_editor):
    req = {
        "Athletiker": "SCH 5",
        "Gelehrter": "IN 5",
        "Weiser": "Intuition 12",
        "Akrobat": "Reaktion 12",
        "Tank": "körperliche HP 50",
        "Heiler": "Erste Hilfe 14",
        "Techniker": "Technik 14",
        "Dieb": "Heimlichkeit 14",
        "Händler": "UM 5",
        "Zauberer": "MA 5",
        "Hexer": "Astral-Widerstand 14",
        "Metamagier": "geistige HP 40",
        "Selbstkenner": "Initiative 20",
        "Schütze": "F 5",
        "Artillerist": "Zielen 14",
        "Barbar": "Waffenloser Kampf 14",
        "Ritter": "nat. Schadenswiderstand 14",
    }

    Klasse = apps.get_model('character', 'Klasse')
    klassen = []
    for klasse in Klasse.objects.all():
        klasse.requirement = req[klasse.titel]
        klassen.append(klasse)
    Klasse.objects.bulk_update(klassen, ["requirement"])


def reimburse_ap(apps, schema_editor):
    Charakter = apps.get_model('character', 'Charakter')
    RelAttribut = apps.get_model('character', 'RelAttribut')

    ap_subquery = RelAttribut.objects\
        .filter(char=OuterRef("pk"))\
        .annotate(ap = F("aktuellerWert_temp") + 2*F("maxWert_temp"))\
        .values("char")\
        .annotate(sum=Sum("ap"))\
        .values("sum")

    Charakter.objects\
        .annotate(ap_spent = Coalesce(Subquery(ap_subquery), 0))\
        .update(ap=F("ap") + F("ap_spent"))
    
    RelAttribut.objects.update(aktuellerWert_temp=0, maxWert_temp=0)


class Migration(migrations.Migration):

    dependencies = [
        ('character', '0168_alter_klasse_requirement'),
    ]

    operations = [
        migrations.RunPython(init_klasse_requirement),
        migrations.RunPython(reimburse_ap),
    ]
