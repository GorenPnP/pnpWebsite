# Generated by Django 2.2.13 on 2020-07-30 14:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('character', '0018_auto_20200730_1615'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gfs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=20, unique=True)),
                ('ap', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('beschreibung', models.TextField(blank=True, default='', max_length=3000)),
            ],
            options={
                'verbose_name_plural': 'Gfs/Klassen',
                'verbose_name': 'Gfs/Klasse',
                'ordering': ['wesen', 'titel'],
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=20, unique=True)),
                ('ap', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100)])),
                ('beschreibung', models.TextField(blank=True, default='', max_length=3000)),
            ],
            options={
                'verbose_name_plural': 'Professionen',
                'verbose_name': 'Profession',
                'ordering': ['titel'],
            },
        ),
        migrations.CreateModel(
            name='ProfessionVorteil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notizen', models.CharField(blank=True, default='', max_length=100)),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Profession')),
                ('teil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Vorteil')),
            ],
            options={
                'verbose_name_plural': 'Startvorteile',
                'verbose_name': 'Startvorteil',
                'ordering': ['teil'],
                'unique_together': {('teil', 'profession', 'notizen')},
            },
        ),
        migrations.CreateModel(
            name='ProfessionNachteil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notizen', models.CharField(blank=True, default='', max_length=100)),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Profession')),
                ('teil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Nachteil')),
            ],
            options={
                'verbose_name_plural': 'Startnachteile',
                'verbose_name': 'Startnachteil',
                'ordering': ['teil'],
                'unique_together': {('teil', 'profession', 'notizen')},
            },
        ),
        migrations.CreateModel(
            name='ProfessionAttribut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aktuellerWert', models.IntegerField(default=0)),
                ('maxWert', models.IntegerField(default=0)),
                ('attribut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Attribut')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Profession')),
            ],
            options={
                'verbose_name_plural': 'Startattribute',
                'verbose_name': 'Startattribut',
                'ordering': ['attribut'],
                'unique_together': {('attribut', 'profession')},
            },
        ),
        migrations.AddField(
            model_name='profession',
            name='attribute',
            field=models.ManyToManyField(through='character.ProfessionAttribut', to='character.Attribut'),
        ),
        migrations.AddField(
            model_name='profession',
            name='nachteile',
            field=models.ManyToManyField(blank=True, through='character.ProfessionNachteil', to='character.Nachteil'),
        ),
        migrations.AddField(
            model_name='profession',
            name='vorteile',
            field=models.ManyToManyField(blank=True, through='character.ProfessionVorteil', to='character.Vorteil'),
        ),
        migrations.CreateModel(
            name='GfsVorteil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notizen', models.CharField(blank=True, default='', max_length=100)),
                ('gfs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Gfs')),
                ('teil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Vorteil')),
            ],
            options={
                'verbose_name_plural': 'Startvorteile',
                'verbose_name': 'Startvorteil',
                'ordering': ['teil'],
                'unique_together': {('teil', 'gfs', 'notizen')},
            },
        ),
        migrations.CreateModel(
            name='GfsNachteil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notizen', models.CharField(blank=True, default='', max_length=100)),
                ('gfs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Gfs')),
                ('teil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Nachteil')),
            ],
            options={
                'verbose_name_plural': 'Startnachteile',
                'verbose_name': 'Startnachteil',
                'ordering': ['teil'],
                'unique_together': {('teil', 'gfs', 'notizen')},
            },
        ),
        migrations.CreateModel(
            name='GfsAttribut',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aktuellerWert', models.IntegerField(default=0)),
                ('maxWert', models.IntegerField(default=0)),
                ('attribut', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Attribut')),
                ('gfs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.Gfs')),
            ],
            options={
                'verbose_name_plural': 'Startattribute',
                'verbose_name': 'Startattribut',
                'ordering': ['attribut'],
                'unique_together': {('attribut', 'gfs')},
            },
        ),
        migrations.AddField(
            model_name='gfs',
            name='attribute',
            field=models.ManyToManyField(through='character.GfsAttribut', to='character.Attribut'),
        ),
        migrations.AddField(
            model_name='gfs',
            name='nachteile',
            field=models.ManyToManyField(blank=True, through='character.GfsNachteil', to='character.Nachteil'),
        ),
        migrations.AddField(
            model_name='gfs',
            name='vorteile',
            field=models.ManyToManyField(blank=True, through='character.GfsVorteil', to='character.Vorteil'),
        ),
        migrations.AddField(
            model_name='gfs',
            name='wesen',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='character.Spezies'),
        ),
    ]
