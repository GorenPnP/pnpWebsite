# Generated by Django 3.2.16 on 2022-11-16 15:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('character', '0064_gfsstufenplanbase_tp'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlockedTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('start', models.DateTimeField(unique=True)),
                ('end', models.DateTimeField(unique=True)),
            ],
            options={
                'verbose_name': 'Blockierter Zeitraum',
                'verbose_name_plural': 'Blockierte Zeitr√§ume',
                'ordering': ['start'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Weekday',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(unique=True)),
                ('name', models.CharField(max_length=20, unique=True)),
                ('short_name', models.CharField(max_length=2, unique=True)),
            ],
            options={
                'verbose_name': 'Wochentag',
                'verbose_name_plural': 'Wochentage',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Repetitions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('end_date', models.DateField()),
                ('interval', models.ManyToManyField(to='planner.Weekday')),
            ],
            options={
                'verbose_name': 'Wiederholung',
                'verbose_name_plural': 'Wiederholungen',
                'ordering': ['end_date'],
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField()),
                ('note', models.TextField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='character.spieler')),
            ],
            options={
                'verbose_name': 'Teilnahme',
                'verbose_name_plural': 'Teilnahmen',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(unique=True)),
                ('max_players', models.PositiveSmallIntegerField(default=4)),
                ('max_waitinglist', models.PositiveSmallIntegerField(default=4)),
                ('state', models.CharField(choices=[('p', 'proposal'), ('o', 'open for participation'), ('c', 'closed')], max_length=1)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='character.spieler')),
                ('players', models.ManyToManyField(to='planner.Participation')),
                ('tags', models.ManyToManyField(to='planner.Tag')),
            ],
            options={
                'verbose_name': 'Termin',
                'verbose_name_plural': 'Termine',
                'ordering': ['start'],
            },
        ),
    ]
