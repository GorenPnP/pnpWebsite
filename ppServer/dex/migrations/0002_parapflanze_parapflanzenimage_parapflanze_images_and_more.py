# Generated by Django 4.1.7 on 2023-11-28 17:16

import dex.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms


class Migration(migrations.Migration):

    dependencies = [
        ('dex', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ParaPflanze',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('generation', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('number', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('phasen', models.PositiveSmallIntegerField(default=5, validators=[django.core.validators.MinValueValidator(1)])),
                ('erholungsphase', models.TextField()),
                ('vermehrung', models.TextField()),
                ('nahrung', models.TextField()),
                ('standort', models.TextField()),
                ('besonderheiten', models.TextField()),
                ('pH', models.FloatField(default=7, validators=[django.core.validators.MinValueValidator(-4), django.core.validators.MaxValueValidator(20)])),
                ('temperature', models.FloatField(default=10, help_text='in °C', validators=[django.core.validators.MinValueValidator(-30), django.core.validators.MaxValueValidator(50)])),
                ('licht', models.PositiveSmallIntegerField(choices=[(1, '0/4'), (2, '1/4'), (3, '2/4'), (4, '3/4'), (5, '4/4')], default=2)),
                ('boden', models.PositiveSmallIntegerField(choices=[(1, 'Weich'), (2, 'Mittel'), (3, 'Hart')], default=1)),
                ('wasser', models.PositiveSmallIntegerField(choices=[(1, 'Wenig'), (2, 'Mittel'), (3, 'Viel')])),
                ('soziale_bedürfnisse', models.SmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(-3), django.core.validators.MaxValueValidator(3)])),
                ('krankheitsanfälligkeit', models.SmallIntegerField(choices=[(1, 'Sehr Gering'), (2, 'Gering'), (3, 'Mäßig'), (4, 'Hoch'), (5, 'Sehr Hoch'), (6, 'Extrem Hoch')], default=2)),
                ('größe', models.FloatField(help_text='in Metern', validators=[django.core.validators.MinValueValidator(0.001)])),
            ],
            options={
                'verbose_name': 'Para-Pflanze',
                'verbose_name_plural': 'Para-Pflanzen',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ParaPflanzenImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(crop=None, force_format=None, keep_meta=True, quality=-1, scale=None, size=[1024, 1024], upload_to=dex.models.upload_and_rename_to_id)),
                ('phase', models.PositiveSmallIntegerField(default=1)),
                ('aussehen', models.TextField()),
                ('is_vorschau', models.BooleanField(default=False)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dex.parapflanze')),
            ],
            options={
                'verbose_name': 'Para-Pflanzenbild',
                'verbose_name_plural': 'Para-Pflanzenbilder',
                'ordering': ['id'],
                'unique_together': {('plant', 'phase')},
            },
        ),
        migrations.AddField(
            model_name='parapflanze',
            name='images',
            field=models.ManyToManyField(to='dex.parapflanzenimage'),
        ),
        migrations.AlterUniqueTogether(
            name='parapflanze',
            unique_together={('generation', 'number')},
        ),
    ]
